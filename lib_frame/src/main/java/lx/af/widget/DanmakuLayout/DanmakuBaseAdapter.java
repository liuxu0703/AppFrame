package lx.af.widget.DanmakuLayout;import android.view.View;import java.util.LinkedList;import java.util.List;/** * author: lx * date: 16-3-23 */public abstract class DanmakuBaseAdapter<T> {    public abstract View getView(T data, View convertView, DanmakuLayout parent);    public abstract long getDuration(T data);    public abstract int getViewType(T data);    public abstract void onDataEmpty();    public final void addData(T data) {        synchronized (mDataLock) {            mDataList.add(data);        }        if (mDanmakuLayout != null) {            mDanmakuLayout.onNewDataArrived();        }    }    public final void addData(List<T> dataList) {        synchronized (mDataLock) {            mDataList.addAll(dataList);        }        if (mDanmakuLayout != null) {            mDanmakuLayout.onNewDataArrived();        }    }    // =================================================    private DanmakuLayout mDanmakuLayout;    private LinkedList<T> mDataList = new LinkedList<>();    private final Object mDataLock = new Object();    void setDanmakuLayout(DanmakuLayout danmakuLayout) {        mDanmakuLayout = danmakuLayout;    }    DanmakuAnimator getDanmakuAnimator() {        T data;        synchronized (mDataLock) {            data = mDataList.pollFirst();        }        if (data == null) {            mDanmakuLayout.log("adapter, notify data empty");            onDataEmpty();            return null;        }        int type = getViewType(data);        long duration = getDuration(data);        DanmakuAnimator da = mDanmakuLayout.getRecycledAnimator(getViewType(data));        if (da != null) {            View convertView = da.getView();            View view = getView(data, convertView, mDanmakuLayout);            return da.reset(view, type, duration);        } else {            View view = getView(data, null, mDanmakuLayout);            return new DanmakuAnimator(view, type, duration);        }    }    boolean hasData() {        return mDataList.size() > 0;    }}